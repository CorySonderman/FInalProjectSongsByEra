<!--
    This view displays details of a single song.
    Key Points:
    - Displays song details.
    - Includes a link to update the song.
-->
@model ISong

<h3>@Model.Title Information</h3>

<table class="table">
    <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Artist</th>
        <th>Genre</th>
        <th>Year Released</th>
    </tr>
    <tr>
        <td>@Model.ID</td>
        <td>@Model.Title</td>
        <td>@Model.Artist</td>
        <td>@Model.Genre</td>
        <td>@Model.YearReleased</td>
    </tr>
</table>
<!--<div style="display: block">
    <a asp-controller="Songs" asp-action="ViewSong" asp-route-id="@Model.ID" asp-route-tableName="@($"songs_{Model.YearReleased}s")">View this Song</a>
</div>-->
<!--<div style="display: block">
    <a href="/Songs/ViewSong/@Model.ID?decade=@Model.YearReleased&tableName=songs_@(Model.YearReleased)s">View this Song</a>
</div>-->
<!-- ... (your existing code for displaying song details) ... -->

<div style="display: block">
    <form asp-controller="Songs" asp-action="ViewSong" method="get">
        <input type="hidden" name="id" value="@Model.ID" />
        <input type="hidden" name="decade" value="@Model.YearReleased" />
        <input type="hidden" name="tableName" value="@($"songs_{Model.YearReleased}s")" />
        <button type="submit">View this Song</button>
    </form>
    <p>Table Name: @($"songs_{Model.YearReleased}s")</p>
</div>
@{
    Console.WriteLine($"Table Name: songs_{Model.YearReleased}s"); // Add this line for logging
}